public class Main
{
    public static boolean[] beforeUsed;
    public static void main(String[] args) {
        System.out.println("Hello World");
      //  int[] arr = {4, 3, 2, 3, 5, 2, 1};
      //  int k = 4;
        int[] arr = {4, 2, 3, 4, 4, 3, 4, 6};
       int k = 3;
        beforeUsed = new boolean[arr.length];
        Main.canPartitionKSubsets(arr,k);
    //  System.out.println(Main.canPartitionKSubsets(arr,k));
    }
   
    public static boolean canPartitionKSubsets(int[] arr, int k)
    {
        int sumOfTheItems = java.util.stream.IntStream.of(arr).sum();
        if (k == 0 || sumOfTheItems % k != 0)
        {
            return false;
        }
        return Main.canPartition(0, arr, new boolean[arr.length], k, 0, sumOfTheItems / k);
    }
   
    public static boolean canPartition(int iterationStart, int[] arr, boolean[] used, int k, int inProgressBucketSum, int targetBucketSum) {
        if (k == 1) {
             //System.out.println("BeforeUsed in k==1-");
           
            for(int i = 0; i < arr.length ; i++)
            {
                if (used[i] == false)
                {
                    System.out.print(arr[i] + " ");
                }
            }
            System.out.println();
            return true;
        }
           
        if (targetBucketSum == inProgressBucketSum) {
            /*for(boolean x : used){
                System.out.print(x + " ");
            }
            System.out.println();*/
            // System.out.println("BeforeUsed-");
            // for(int i = 0; i < arr.length ; i++)
            // {
            //     System.out.print(beforeUsed[i]);
            // }
            // System.out.println();
           
            // System.out.println("Used-");
            // for(int i = 0; i < arr.length ; i++)
            // {
            //     System.out.print(used[i]);
            // }
            // System.out.println();
           
            for(int i = 0; i < arr.length ; i++)
            {
                if (used[i] != beforeUsed[i])
                {
                    System.out.print(arr[i] + " ");
                }
            }
            System.out.println();
           
            //beforeUsed = used;
            for(int i = 0; i < arr.length ; i++)
            {
                beforeUsed[i] = used[i];
            }
            return canPartition(0, arr, used, k-1, 0, targetBucketSum);
        }
       
        for(int i = iterationStart; i < arr.length; i++) {
            if (!used[i]){
                used[i] = true;
                if (canPartition(i+1, arr, used, k, inProgressBucketSum + arr[i], targetBucketSum)) {
                    return true;
                }
                used[i] = false;
            }
           
        }
       
        return false;
    }
}